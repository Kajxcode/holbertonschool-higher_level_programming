>>> from add_integer import add_integer
>>> add_integer(1, 2)
3
>>> add_integer(1.5, 2.5)
3
>>> add_integer(-1, 1)
0
>>> add_integer(1)  # doctest: +SKIP
98
>>> add_integer("1", 2)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(1, "2")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Regular addition of two integers
>>> add_integer(10, 5)
15

# Addition with one float (should be cast to int)
>>> add_integer(3.7, 4)
7

# Addition with two floats (both should be cast to int)
>>> add_integer(1.9, 2.1)
3

# Addition with large integers (test for overflow handling)
>>> add_integer(10**100, 10**100)
20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

# Type error if 'a' is not an integer or float
>>> add_integer("1", 2)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Type error if 'b' is not an integer or float
>>> add_integer(1, "2")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Missing second argument (should use default)
>>> add_integer(98)
98  # Replace 98 with your actual default if itâ€™s different

# Missing both arguments
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'
