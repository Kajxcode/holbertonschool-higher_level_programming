>>> from .add_integer import add_integer

# Regular addition with ints
>>> add_integer(1, 2)
3

# Integer casting of floats (truncation)
>>> add_integer(1.5, 2.5)
3
>>> add_integer(3.7, 4)
7
>>> add_integer(1.9, 2.1)
3

# Check types: passing strings raises TypeError
>>> add_integer("1", 2)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(1, "2")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Float overflow: large floats truncated to ints and added
>>> add_integer(1e308, 1e308)  # floats that become huge ints
200000000000000002195812725888091083480984619354623692673621365806315170809822983074326657956989377798122499339442345031223180567486280176656614018396292092062543329005866054371394979399177118086676768932330002356853795252425890355256182391573414916245567940343568830210583605786415746545949771430860446236672

# Cannot convert NaN (float) to int
>>> import math
>>> add_integer(math.nan, 2)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

# Missing one argument, b defaults to 98
>>> add_integer(5)
103

# Missing both arguments: raises TypeError for missing required argument a
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'
