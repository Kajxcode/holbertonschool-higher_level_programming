#!/usr/bin/python3
matrix_divided = __import__('2-matrix_divided').matrix_divided

def test_matrix_divided():
    # Basic test
    matrix = [
        [1, 2, 3],
        [4, 5, 6]
    ]
    result = matrix_divided(matrix, 2)
    assert result == [
        [0.5, 1.0, 1.5],
        [2.0, 2.5, 3.0]
    ]

    # Test rounding
    matrix = [[1, 2], [3, 4]]
    result = matrix_divided(matrix, 3)
    assert result == [[0.33, 0.67], [1.0, 1.33]]

    # Test div is zero
    try:
        matrix_divided(matrix, 0)
    except ZeroDivisionError as e:
        assert str(e) == "division by zero"

    # Test div is not number
    try:
        matrix_divided(matrix, "a")
    except TypeError as e:
        assert str(e) == "div must be a number"

    # Test matrix not a matrix of numbers
    try:
        matrix_divided([[1, "a"], [3, 4]], 2)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats"

    # Test rows have different sizes
    try:
        matrix_divided([[1, 2], [3]], 2)
    except TypeError as e:
        assert str(e) == "Each row of the matrix must have the same size"

    print("All tests passed!")

if __name__ == "__main__":
    test_matrix_divided()
